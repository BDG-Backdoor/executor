--- a/source/cpp/naming_conventions/naming_conventions.cpp
+++ b/source/cpp/naming_conventions/naming_conventions.cpp
@@ -137,6 +137,56 @@ void NamingConventionManager::InitializeUNC() {
     RegisterAlias("WebSocket", "WebSocket", ConventionType::UNC, "WebSocket library");
     RegisterAlias("WebSocket.connect", "WebSocket.connect", ConventionType::UNC, "Connect to a WebSocket server");
     
+    // Cryptography functions
+    RegisterAlias("crypt.base64decode", "crypt.base64decode", ConventionType::UNC, "Decode base64 data");
+    RegisterAlias("crypt.base64encode", "crypt.base64encode", ConventionType::UNC, "Encode data as base64");
+    RegisterAlias("crypt.decrypt", "crypt.decrypt", ConventionType::UNC, "Decrypt data");
+    RegisterAlias("crypt.encrypt", "crypt.encrypt", ConventionType::UNC, "Encrypt data");
+    RegisterAlias("crypt.generatebytes", "crypt.generatebytes", ConventionType::UNC, "Generate random bytes");
+    RegisterAlias("crypt.generatekey", "crypt.generatekey", ConventionType::UNC, "Generate a cryptographic key");
+    RegisterAlias("crypt.hash", "crypt.hash", ConventionType::UNC, "Hash data");
+    
+    // Debug functions
+    RegisterAlias("debug.getconstant", "debug.getconstant", ConventionType::UNC, "Get a constant from a function");
+    RegisterAlias("debug.getconstants", "debug.getconstants", ConventionType::UNC, "Get all constants from a function");
+    RegisterAlias("debug.getinfo", "debug.getinfo", ConventionType::UNC, "Get information about a function");
+    RegisterAlias("debug.getproto", "debug.getproto", ConventionType::UNC, "Get a proto from a function");
+    RegisterAlias("debug.getprotos", "debug.getprotos", ConventionType::UNC, "Get all protos from a function");
+    RegisterAlias("debug.getstack", "debug.getstack", ConventionType::UNC, "Get the stack of a thread");
+    RegisterAlias("debug.getupvalue", "debug.getupvalue", ConventionType::UNC, "Get an upvalue from a function");
+    RegisterAlias("debug.getupvalues", "debug.getupvalues", ConventionType::UNC, "Get all upvalues from a function");
+    RegisterAlias("debug.print", "debug.print", ConventionType::UNC, "Print debug information");
+    RegisterAlias("debug.setconstant", "debug.setconstant", ConventionType::UNC, "Set a constant in a function");
+    RegisterAlias("debug.setstack", "debug.setstack", ConventionType::UNC, "Set a value in the stack");
+    RegisterAlias("debug.setupvalue", "debug.setupvalue", ConventionType::UNC, "Set an upvalue in a function");
+    
+    // File system functions
+    RegisterAlias("appendfile", "appendfile", ConventionType::UNC, "Append to a file");
+    RegisterAlias("delfile", "delfile", ConventionType::UNC, "Delete a file");
+    RegisterAlias("delfolder", "delfolder", ConventionType::UNC, "Delete a folder");
+    RegisterAlias("dofile", "dofile", ConventionType::UNC, "Execute a file");
+    RegisterAlias("isfile", "isfile", ConventionType::UNC, "Check if a file exists");
+    RegisterAlias("isfolder", "isfolder", ConventionType::UNC, "Check if a folder exists");
+    RegisterAlias("listfiles", "listfiles", ConventionType::UNC, "List files in a folder");
+    RegisterAlias("loadfile", "loadfile", ConventionType::UNC, "Load a file as a function");
+    RegisterAlias("makefolder", "makefolder", ConventionType::UNC, "Create a folder");
+    RegisterAlias("readfile", "readfile", ConventionType::UNC, "Read a file");
+    RegisterAlias("writefile", "writefile", ConventionType::UNC, "Write to a file");
+    
+    // Instance interaction functions
+    RegisterAlias("fireclickdetector", "fireclickdetector", ConventionType::UNC, "Fire a click detector");
+    RegisterAlias("fireproximityprompt", "fireproximityprompt", ConventionType::UNC, "Fire a proximity prompt");
+    RegisterAlias("firesignal", "firesignal", ConventionType::UNC, "Fire a signal");
+    RegisterAlias("firetouchinterest", "firetouchinterest", ConventionType::UNC, "Fire a touch interest");
+    RegisterAlias("getcallbackvalue", "getcallbackvalue", ConventionType::UNC, "Get a callback value");
+    RegisterAlias("getconnections", "getconnections", ConventionType::UNC, "Get connections from a signal");
+    RegisterAlias("getcustomasset", "getcustomasset", ConventionType::UNC, "Get a custom asset");
+    RegisterAlias("gethiddenproperty", "gethiddenproperty", ConventionType::UNC, "Get a hidden property");
+    RegisterAlias("gethui", "gethui", ConventionType::UNC, "Get the hidden UI");
+    RegisterAlias("getinstances", "getinstances", ConventionType::UNC, "Get all instances");
+    RegisterAlias("getnilinstances", "getnilinstances", ConventionType::UNC, "Get nil instances");
+    RegisterAlias("isrbxactive", "isrbxactive", ConventionType::UNC, "Check if Roblox is active");
+    RegisterAlias("sethiddenproperty", "sethiddenproperty", ConventionType::UNC, "Set a hidden property");
+    
     // Player functions
     RegisterAlias("getplayer", "getplayer", ConventionType::UNC, "Get a player");
     RegisterAlias("getlocalplayer", "getlocalplayer", ConventionType::UNC, "Get the local player");
@@ -224,6 +274,56 @@ void NamingConventionManager::InitializeSNC() {
     RegisterAlias("WebSocket", "WebSocket", ConventionType::SNC, "WebSocket library");
     RegisterAlias("WebSocket.connect", "WebSocket.connect", ConventionType::SNC, "Connect to a WebSocket server");
     
+    // Cryptography functions
+    RegisterAlias("crypt.base64decode", "crypt.base64decode", ConventionType::SNC, "Decode base64 data");
+    RegisterAlias("crypt.base64encode", "crypt.base64encode", ConventionType::SNC, "Encode data as base64");
+    RegisterAlias("crypt.decrypt", "crypt.decrypt", ConventionType::SNC, "Decrypt data");
+    RegisterAlias("crypt.encrypt", "crypt.encrypt", ConventionType::SNC, "Encrypt data");
+    RegisterAlias("crypt.generatebytes", "crypt.generatebytes", ConventionType::SNC, "Generate random bytes");
+    RegisterAlias("crypt.generatekey", "crypt.generatekey", ConventionType::SNC, "Generate a cryptographic key");
+    RegisterAlias("crypt.hash", "crypt.hash", ConventionType::SNC, "Hash data");
+    
+    // Debug functions
+    RegisterAlias("debug.getconstant", "debug.getconstant", ConventionType::SNC, "Get a constant from a function");
+    RegisterAlias("debug.getconstants", "debug.getconstants", ConventionType::SNC, "Get all constants from a function");
+    RegisterAlias("debug.getinfo", "debug.getinfo", ConventionType::SNC, "Get information about a function");
+    RegisterAlias("debug.getproto", "debug.getproto", ConventionType::SNC, "Get a proto from a function");
+    RegisterAlias("debug.getprotos", "debug.getprotos", ConventionType::SNC, "Get all protos from a function");
+    RegisterAlias("debug.getstack", "debug.getstack", ConventionType::SNC, "Get the stack of a thread");
+    RegisterAlias("debug.getupvalue", "debug.getupvalue", ConventionType::SNC, "Get an upvalue from a function");
+    RegisterAlias("debug.getupvalues", "debug.getupvalues", ConventionType::SNC, "Get all upvalues from a function");
+    RegisterAlias("debug.print", "debug.print", ConventionType::SNC, "Print debug information");
+    RegisterAlias("debug.setconstant", "debug.setconstant", ConventionType::SNC, "Set a constant in a function");
+    RegisterAlias("debug.setstack", "debug.setstack", ConventionType::SNC, "Set a value in the stack");
+    RegisterAlias("debug.setupvalue", "debug.setupvalue", ConventionType::SNC, "Set an upvalue in a function");
+    
+    // File system functions
+    RegisterAlias("appendfile", "appendfile", ConventionType::SNC, "Append to a file");
+    RegisterAlias("delfile", "delfile", ConventionType::SNC, "Delete a file");
+    RegisterAlias("delfolder", "delfolder", ConventionType::SNC, "Delete a folder");
+    RegisterAlias("dofile", "dofile", ConventionType::SNC, "Execute a file");
+    RegisterAlias("isfile", "isfile", ConventionType::SNC, "Check if a file exists");
+    RegisterAlias("isfolder", "isfolder", ConventionType::SNC, "Check if a folder exists");
+    RegisterAlias("listfiles", "listfiles", ConventionType::SNC, "List files in a folder");
+    RegisterAlias("loadfile", "loadfile", ConventionType::SNC, "Load a file as a function");
+    RegisterAlias("makefolder", "makefolder", ConventionType::SNC, "Create a folder");
+    RegisterAlias("readfile", "readfile", ConventionType::SNC, "Read a file");
+    RegisterAlias("writefile", "writefile", ConventionType::SNC, "Write to a file");
+    
+    // Instance interaction functions
+    RegisterAlias("fireclickdetector", "fireclickdetector", ConventionType::SNC, "Fire a click detector");
+    RegisterAlias("fireproximityprompt", "fireproximityprompt", ConventionType::SNC, "Fire a proximity prompt");
+    RegisterAlias("firesignal", "firesignal", ConventionType::SNC, "Fire a signal");
+    RegisterAlias("firetouchinterest", "firetouchinterest", ConventionType::SNC, "Fire a touch interest");
+    RegisterAlias("getcallbackvalue", "getcallbackvalue", ConventionType::SNC, "Get a callback value");
+    RegisterAlias("getconnections", "getconnections", ConventionType::SNC, "Get connections from a signal");
+    RegisterAlias("getcustomasset", "getcustomasset", ConventionType::SNC, "Get a custom asset");
+    RegisterAlias("gethiddenproperty", "gethiddenproperty", ConventionType::SNC, "Get a hidden property");
+    RegisterAlias("gethui", "gethui", ConventionType::SNC, "Get the hidden UI");
+    RegisterAlias("getinstances", "getinstances", ConventionType::SNC, "Get all instances");
+    RegisterAlias("getnilinstances", "getnilinstances", ConventionType::SNC, "Get nil instances");
+    RegisterAlias("isrbxactive", "isrbxactive", ConventionType::SNC, "Check if Roblox is active");
+    RegisterAlias("sethiddenproperty", "sethiddenproperty", ConventionType::SNC, "Set a hidden property");
+    
     // Player functions
     RegisterAlias("getplayer", "getplayer", ConventionType::SNC, "Get a player");
     RegisterAlias("getlocalplayer", "getlocalplayer", ConventionType::SNC, "Get the local player");
