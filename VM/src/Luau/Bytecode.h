// Stub Bytecode.h for compilation purposes
#pragma once

#include <stdint.h>
#include <stddef.h>

namespace Luau {
    // Bytecode instruction types
    enum class LuauOpcode : uint8_t {
        NOP = 0,
        LOADNIL,
        LOADB,
        LOADN,
        LOADK,
        MOVE,
        GETGLOBAL,
        SETGLOBAL,
        GETUPVAL,
        SETUPVAL,
        CLOSEUPVALS,
        GETIMPORT,
        GETTABLE,
        SETTABLE,
        GETTABLEKS,
        SETTABLEKS,
        GETTABLEN,
        SETTABLEN,
        NEWCLOSURE,
        NAMECALL,
        CALL,
        RETURN,
        JUMP,
        JUMPBACK,
        JUMPIF,
        JUMPIFNOT,
        JUMPIFEQ,
        JUMPIFLE,
        JUMPIFLT,
        JUMPIFNOTEQ,
        JUMPIFNOTLE,
        JUMPIFNOTLT,
        ADD,
        SUB,
        MUL,
        DIV,
        MOD,
        POW,
        ADDK,
        SUBK,
        MULK,
        DIVK,
        MODK,
        POWK,
        AND,
        OR,
        ANDK,
        ORK,
        CONCAT,
        NOT,
        MINUS,
        LENGTH,
        NEWTABLE,
        DUPTABLE,
        SETLIST,
        FORNPREP,
        FORNLOOP,
        FORGPREP,
        FORGLOOP,
        FORGPREP_INEXT,
        FORGPREP_NEXT,
        NATIVECALL,
        GETVARARGS,
        DUPCLOSURE,
        PREPVARARGS,
        LOADKX,
        JUMPX,
        FASTCALL,
        COVERAGE,
        CAPTURE,
        SUBRK,
        DIVRK,
        FASTCALL1,
        FASTCALL2,
        FASTCALL2K,
        FORGPREP_NEXT_INPLACE,
        JUMPXEQKNIL,
        JUMPXEQKB,
        JUMPXEQKN,
        JUMPXEQKS,
        IDIV,
        IDIVK,
        GETIMPORTK,
        GETGLOBALOPT,
        SETGLOBALOPT,
        FORGLOOP_INPLACE,
        FORGPREP_INPLACE,
        GETUPVAL_NEXTK,
        SETUPVAL_NEXTK,
        GETTABLEN_NEXTK,
        SETTABLEN_NEXTK,
        GETTABLE_NEXTK,
        SETTABLE_NEXTK,
        GETTABLEKS_NEXTK,
        SETTABLEKS_NEXTK,
        GETIMPORT_NEXTK,
        GETIMPORTK_NEXTK,
        GETGLOBAL_NEXTK,
        SETGLOBAL_NEXTK,
        GETGLOBALOPT_NEXTK,
        SETGLOBALOPT_NEXTK,
        FORGPREP_NEXT_INPLACE_K,
        FORGPREP_INPLACE_K,
        JUMPXEQKNIL_NEXTK,
        JUMPXEQKB_NEXTK,
        JUMPXEQKN_NEXTK,
        JUMPXEQKS_NEXTK,
        IFORPREP,
        IFORLOOP,
        IFORLOOPR,
        BITAND,
        BITOR,
        BITXOR,
        BITNOT,
        BITLSHIFT,
        BITRSHIFT,
        BITARSHIFT,
        BITANDK,
        BITORK,
        BITXORK,
        BITLSHIFTK,
        BITRSHIFTK,
        BITARSHIFTK,
        GETUPVALK,
        SETUPVALK,
        NEWCLOSURER,
        DUPCLOSURER,
        FASTCALL1K,
        FASTCALL1R,
        FASTCALL2R,
        FASTCALL2KR,
        JUMPIFNOT_NEXTK,
        JUMPIF_NEXTK,
        JUMPIFEQ_NEXTK,
        JUMPIFLE_NEXTK,
        JUMPIFLT_NEXTK,
        JUMPIFNOTEQ_NEXTK,
        JUMPIFNOTLE_NEXTK,
        JUMPIFNOTLT_NEXTK,
        JUMPBACK_NEXTK,
        JUMP_NEXTK,
        LOADK_NEXTK,
        LOADN_NEXTK,
        LOADB_NEXTK,
        LOADNIL_NEXTK,
        MOVE_NEXTK,
        LOADKX_NEXTK,
        JUMPX_NEXTK,
        RETURN_NEXTK,
        CALL_NEXTK,
        SETLIST_NEXTK,
        GETVARARGS_NEXTK,
        PREPVARARGS_NEXTK,
        COVERAGE_NEXTK,
        CAPTURE_NEXTK,
        NAMECALL_NEXTK,
        NEWCLOSURE_NEXTK,
        NEWCLOSURER_NEXTK,
        DUPCLOSURE_NEXTK,
        DUPCLOSURER_NEXTK,
        CONCAT_NEXTK,
        NOT_NEXTK,
        MINUS_NEXTK,
        LENGTH_NEXTK,
        NEWTABLE_NEXTK,
        DUPTABLE_NEXTK,
        FORNPREP_NEXTK,
        FORNLOOP_NEXTK,
        FORGPREP_NEXTK,
        FORGLOOP_NEXTK,
        FORGPREP_INEXT_NEXTK,
        FORGPREP_NEXT_NEXTK,
        NATIVECALL_NEXTK,
        CLOSEUPVALS_NEXTK,
        ADD_NEXTK,
        SUB_NEXTK,
        MUL_NEXTK,
        DIV_NEXTK,
        MOD_NEXTK,
        POW_NEXTK,
        ADDK_NEXTK,
        SUBK_NEXTK,
        MULK_NEXTK,
        DIVK_NEXTK,
        MODK_NEXTK,
        POWK_NEXTK,
        AND_NEXTK,
        OR_NEXTK,
        ANDK_NEXTK,
        ORK_NEXTK,
        IDIV_NEXTK,
        IDIVK_NEXTK,
        SUBRK_NEXTK,
        DIVRK_NEXTK,
        FASTCALL_NEXTK,
        FASTCALL1_NEXTK,
        FASTCALL2_NEXTK,
        FASTCALL2K_NEXTK,
        FASTCALL1K_NEXTK,
        FASTCALL1R_NEXTK,
        FASTCALL2R_NEXTK,
        FASTCALL2KR_NEXTK,
        FORGLOOP_INPLACE_NEXTK,
        FORGPREP_INPLACE_NEXTK,
        FORGPREP_NEXT_INPLACE_NEXTK,
        FORGPREP_NEXT_INPLACE_K_NEXTK,
        FORGPREP_INPLACE_K_NEXTK,
        IFORPREP_NEXTK,
        IFORLOOP_NEXTK,
        IFORLOOPR_NEXTK,
        BITAND_NEXTK,
        BITOR_NEXTK,
        BITXOR_NEXTK,
        BITNOT_NEXTK,
        BITLSHIFT_NEXTK,
        BITRSHIFT_NEXTK,
        BITARSHIFT_NEXTK,
        BITANDK_NEXTK,
        BITORK_NEXTK,
        BITXORK_NEXTK,
        BITLSHIFTK_NEXTK,
        BITRSHIFTK_NEXTK,
        BITARSHIFTK_NEXTK,
        GETUPVALK_NEXTK,
        SETUPVALK_NEXTK,
    };

    // Bytecode instruction format
    struct Instruction {
        uint32_t value;
    };

    // Bytecode constants
    enum BytecodeConstant {
        LBC_CONSTANT_NIL = 0,
        LBC_CONSTANT_BOOLEAN,
        LBC_CONSTANT_NUMBER,
        LBC_CONSTANT_STRING,
        LBC_CONSTANT_IMPORT,
        LBC_CONSTANT_TABLE,
        LBC_CONSTANT_CLOSURE
    };

    // Bytecode header
    struct BytecodeHeader {
        uint8_t version;
        uint8_t typesVersion;
    };
}